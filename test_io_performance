#!/usr/bin/env python
# coding=utf-8

from __future__ import division, print_function, unicode_literals
import os
import sys
import shlex
import subprocess

events = 32
buf = 4096
files = [0, 1] # 0 memery 1 disk
modes = {"sync":[0, 1], "async":[0, 1, 2, 3]}
fds = [100, 200, 400]
sync_cmd = "./sync_io_read {} {} {} {}"
async_cmd = "./async_io_read {} {} {} {} {}"
clean_caches = "sync; sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'"
count = 5

def exec_mode(type):
    for file in files:
        for mode in modes[type]:
            for fd in fds:
                if type == "sync":
                    command = sync_cmd.format(fd, file, buf, mode)
                else:
                    command = async_cmd.format(fd, file, buf, events, mode)
                print("**********start**********")
                for i in range(count):
                    subprocess.Popen(shlex.split(command)).wait()
                    subprocess.Popen(shlex.split("sync")).wait()
                    subprocess.Popen(shlex.split("sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'")).wait()
                print("***********end***********")
                print()

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print("first init config file\ntest commod: ./test_io_performance async/sync")
    exec_mode(sys.argv[1])
